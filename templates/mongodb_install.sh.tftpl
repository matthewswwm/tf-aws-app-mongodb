#!/bin/bash
#
### mongodb_install.sh
# This shellscript is responsible for installing MongoDB and configuring:
  # Listening for all connections
  # Enabling authentication
# Default config file location: /etc/mongod.conf
# Tested on an amazon linux 2 machine

set -e
set -x

echo "[INFO]: Starting MongoDB installation procedure"

# Sets up yum package for MongoDB & install
echo -e "[mongodb-org-7.0]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/amazon/2/mongodb-org/7.0/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://pgp.mongodb.com/server-7.0.asc" | sudo tee /etc/yum.repos.d/mongodb-org-7.0.repo
sudo yum install -y mongodb-org

# Command to add bindIp value to the config file.
sudo grep -q 'bindIp:' /etc/mongod.conf \
     && sudo sed -i 's/^\([[:space:]]*bindIp:\).*/\1 0.0.0.0/' /etc/mongod.conf \
     || sudo sed -i '/^net:/a \  bindIp: 0.0.0.0' /etc/mongod.conf

# Start mongod to ensure it's running before user creation
sudo systemctl start mongod
sleep 10
sudo systemctl status mongod

mongosh admin --eval "
db.createUser({
  user: '${mongo_admin_username}',
  pwd: '${mongo_admin_password}',
  roles: [
    { role: 'root', db: 'admin' },
  ]
});
db.createUser({
  user: '${mongo_tasky_username}',
  pwd: '${mongo_tasky_password}',
  roles: [
    { role: 'userAdminAnyDatabase', db: 'admin' },
    { role: 'readWriteAnyDatabase', db: 'admin' }
  ]
});
"

# Uncomment security section and enable authorization
# Note: If done before user creation, this will fail as db.createUser needs authentication
sudo sed -i 's/^#security:/security:/' /etc/mongod.conf
sudo grep -q 'authorization:' /etc/mongod.conf \
     && sudo sed -i 's/^.*authorization:.*/  authorization: enabled/' /etc/mongod.conf \
     || sudo sed -i '/^security:/a \  authorization: enabled' /etc/mongod.conf

# Restart mongod
sudo systemctl restart mongod
sudo systemctl status mongod

echo "[INFO]: MongoDB Installation completed"
